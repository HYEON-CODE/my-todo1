{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      addItemText: '',\n      editItemText: '',\n      crrEditItem: '',\n      writeState: 'add',\n      todos: [{\n        text: '공부하기',\n        state: 'yet'\n      }, {\n        text: '운동하기',\n        state: 'done'\n      }, {\n        text: '글쓰기',\n        state: 'done'\n      }]\n    };\n  },\n  methods: {\n    addItem() {\n      if (this.addItemText === '') return;\n      this.todos.push({\n        text: this.addItemText,\n        state: 'yet'\n      });\n      this.addItemText = '';\n    },\n    checkItem(i) {\n      if (this.todos[i].state === 'yet') {\n        this.todos[i].state = 'done';\n      } else {\n        this.todos[i].state = 'yet';\n      }\n    },\n    editShow(i) {\n      this.crrEditItem = i;\n      this.writeState = 'edit';\n      this.editItemText = this.todos[i].text;\n    },\n    editSave() {\n      this.todos[this.crrEditItem].text = this.editItemText;\n      this.writeState = 'add';\n    }\n  },\n  mounted() {\n    this.$refs.writeArea.focus();\n  }\n};","map":{"version":3,"mappings":";AA2CA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC,QACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA;IAEA;EACA;EACAC;IACAC;MACA;MACA;QAAAH;QAAAC;MAAA;MACA;IACA;IACAG;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["data","addItemText","editItemText","crrEditItem","writeState","todos","text","state","methods","addItem","checkItem","editShow","editSave","mounted"],"sourceRoot":"src/components","sources":["TodoMain.vue"],"sourcesContent":["<template>\r\n    <div class=\"page\">\r\n        <header><h1>Vue Fire todo1</h1></header>\r\n        <main>\r\n        <div class=\"todos\">\r\n            <div class=\"write\" v-if=\" writeState === 'add'\"> <!-- 등록 -->\r\n                <input type=\"text\" \r\n                ref=\"writeArea\"\r\n                v-model=\"addItemText\"\r\n                @keyup.enter=\"addItem\">\r\n                <button class=\"btn add\" @click=\"addItem\">Add</button>\r\n            </div>\r\n            <div class=\"write\" v-else> <!-- 수정 -->\r\n                <input type=\"text\" \r\n                ref=\"writeArea\"\r\n                v-model=\"editItemText\"\r\n                @keyup.enter=\"editSave\">\r\n                <button class=\"btn add\" @click=\"editSave\">save</button>\r\n            </div>\r\n            <ul v-for=\"(item, i) in todos\" class=\"list\" :key=\"item.text\">\r\n            <li>\r\n                <i\r\n                @click=\"checkItem(i)\"\r\n                :class=\"[item.state==='yet' ? `far` : `fas`, `fa-check-square`]\"></i>\r\n                <span>\r\n                {{ item.text }}\r\n                <b>\r\n                    <a href=\"\" @click.prevent=\"editShow(i)\">Edit</a>\r\n                    <a href=\"\" @click.prevent=\"delShow(i)\">Del</a>\r\n                </b>\r\n                </span>\r\n            </li>\r\n            </ul>\r\n        </div>\r\n        </main>\r\n    </div>\r\n</template>\r\n\r\n<!-- 1. 할일 목록 리스팅 -->\r\n<!-- 2. 할일 등록 기능 -->\r\n<!-- 3. 체크 기능 -->\r\n<!-- 4. 삭제 기능 -->\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            addItemText: '',\r\n            editItemText: '',\r\n            crrEditItem: '',\r\n            writeState: 'add',\r\n            todos:[\r\n            {text: '공부하기', state: 'yet'},\r\n            {text: '운동하기', state: 'done'},\r\n            {text: '글쓰기', state: 'done'},\r\n            ]\r\n        }\r\n    },\r\n    methods: {\r\n        addItem() {\r\n            if (this.addItemText==='') return;\r\n            this.todos.push({text: this.addItemText, state: 'yet'})\r\n            this.addItemText ='';\r\n        },\r\n        checkItem(i) {\r\n            if (this.todos[i].state==='yet') {\r\n                this.todos[i].state='done';\r\n            }else{\r\n                this.todos[i].state='yet';\r\n            }\r\n        },\r\n        editShow(i) {\r\n            this.crrEditItem = i; \r\n            this.writeState = 'edit';\r\n            this.editItemText = this.todos[i].text;\r\n        },\r\n        editSave() {\r\n            this.todos[this.crrEditItem].text = this.editItemText\r\n            this.writeState = 'add';\r\n        },\r\n    },\r\n    mounted() {\r\n        this.$refs.writeArea.focus()\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}